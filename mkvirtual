#!/bin/bash

while getopts ":t:s:b:p:h:k:d:" opt; do
  case $opt in
    t)
      abs_top_srcdir="$(realpath ${OPTARG%/})"
      ;;
    s)
      abs_srcdir="$(realpath ${OPTARG%/})"
      ;;
    b)
      package_bugreport="${OPTARG}"
      ;;
    h)
      host_alias="${OPTARG}"
      ;;
    k)
      kernel_version="${OPTARG}"
      ;;
    d)
      pkg_path="$(realpath ${OPTARG%/})"
      ;;
    \?)
      echo "Usage!"
      exit 0
      ;;
    :)
      printf "Option -%s requires an argument.\n\n" "${OPTARG}"
      exit 1
    ;;
  esac
done      

linux_kernel=$(basename `ls -A ${pkg_path}/linux-image-*-${kernel_version}*_armhf.deb 2> /dev/null ` 2> /dev/null)
linux_headers=$(basename `ls -A ${pkg_path}/linux-headers-*-${kernel_version}*_armhf.deb  2> /dev/null` 2> /dev/null)
linux_firmware=$(basename `ls -A ${pkg_path}/linux-firmware-image-*-${kernel_version}*_armhf.deb 2> /dev/null ` 2> /dev/null)

linux_kernel_pkg=$(/usr/bin/dpkg-deb -I ${pkg_path}/${linux_kernel} | grep Package: | awk '{print $2}')
linux_headers_pkg=$(/usr/bin/dpkg-deb -I ${pkg_path}/${linux_headers} | grep Package: | awk '{print $2}')
linux_firmware_pkg=$(/usr/bin/dpkg-deb -I ${pkg_path}/${linux_firmware} | grep Package: | awk '{print $2}')

package_version="$(date +%Y%j%H%M)"
package_build="$(date +%S)"

linux_version="$package_version.$package_build"

armstrap_linux_headers="${linux_headers_pkg}"
armstrap_linux_headers_name="linux-headers-${kernel_version}"
armstrap_linux_headers_desc="armStrap ${kernel_version} Linux kernel headers
 This metapackage will always depend on the latest linux
 headers available."

armstrap_linux_image="${linux_kernel_pkg}, ${linux_firmware_pkg}"
armstrap_linux_image_name="linux-image-${kernel_version}"
armstrap_linux_image_desc="armStrap ${kernel_version} Linux kernel image
 This metapackage will always depend on the latest linux
 image and firmware avalables."

armstrap_linux="${armstrap_linux_image_name} (= ${linux_version}), ${armstrap_linux_headers_name} (= ${linux_version})"
armstrap_linux_name="linux-${kernel_version}"
armstrap_linux_desc="armStrap ${kernel_version} Linux kernel and headers
 This metapackage will always depend on the latest linux
 image, firmware and headers availables."

rm -rf ${abs_srcdir}/build
rm -rf ${abs_srcdir}/debian

mkdir -p ${abs_srcdir}/build/${armstrap_linux_headers_name}/usr/share/doc/${armstrap_linux_headers_name}
echo -e ${armstrap_linux_image_desc} > ${abs_srcdir}/build/${armstrap_linux_headers_name}/usr/share/doc/${armstrap_linux_headers_name}/README
${abs_top_srcdir}/mkdebian -n ${armstrap_linux_headers_name} -v ${package_version} -B ${package_build} -s "linux-upstream" -S "devel" -u ${package_bugreport} -b ${abs_srcdir}/build/${armstrap_linux_headers_name} -p /usr -h ${host_alias} -d "${armstrap_linux_headers} " -l "${armstrap_linux_headers_desc}"
rm -rf ${abs_srcdir}/build
rm -rf ${abs_srcdir}/debian

mkdir -p ${abs_srcdir}/build/${armstrap_linux_image_name}/usr/share/doc/${armstrap_linux_image_name}
echo -e ${armstrap_linux_image_desc} > ${abs_srcdir}/build/${armstrap_linux_image_name}/usr/share/doc/${armstrap_linux_image_name}/README
${abs_top_srcdir}/mkdebian -n ${armstrap_linux_image_name} -v ${package_version} -B ${package_build} -s "linux-upstream" -S "kernel" -u ${package_bugreport} -b ${abs_srcdir}/build/${armstrap_linux_image_name} -p /usr -h ${host_alias} -d "${armstrap_linux_image}" -l "${armstrap_linux_image_desc}"
rm -rf ${abs_srcdir}/build
rm -rf ${abs_srcdir}/debian

mkdir -p ${abs_srcdir}/build/${armstrap_linux_name}/usr/share/doc/${armstrap_linux_name}
echo -e ${armstrap_linux_desc} > ${abs_srcdir}/build/${armstrap_linux_name}/usr/share/doc/${armstrap_linux_name}/README
${abs_top_srcdir}/mkdebian -n ${armstrap_linux_name} -v ${package_version} -B ${package_build} -s "linux-upstream" -S "kernel" -u ${package_bugreport} -b ${abs_srcdir}/build/${armstrap_linux_name} -p /usr -h ${host_alias} -d "${armstrap_linux}" -l "${armstrap_linux_desc}"
rm -rf ${abs_srcdir}/build
rm -rf ${abs_srcdir}/debian
